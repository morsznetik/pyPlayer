name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-executable:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          cache-dependency-path: 'uv.lock'

      - name: Create virtual environment
        run: uv venv

      - name: Generate lock file if not exists
        run: if (-not(Test-Path -Path "uv.lock")) { uv pip compile pyproject.toml -o uv.lock }
        shell: pwsh

      - name: Install dependencies
        run: |
          uv pip install -e .
          uv pip install pyinstaller

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=$($env:GITHUB_REF_NAME -replace '^v', '')" >> $env:GITHUB_OUTPUT
        shell: pwsh
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}

      - name: Build executable using spec file
        run: |
          .venv\Scripts\python.exe -m PyInstaller pyplayer.spec --distpath dist
        shell: cmd

      - name: Zip executable with README
        run: Compress-Archive -Path dist\pyplayer.exe,README.md,LICENSE -DestinationPath dist\pyplayer-windows.zip
        shell: pwsh

      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: pyplayer-windows
          path: dist\pyplayer-windows.zip

  create-release:
    runs-on: ubuntu-latest
    needs: build-executable
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: pyplayer-windows
          path: dist

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}

      - name: Generate changelog
        id: changelog
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 ${{ github.ref_name }}^ 2>/dev/null || echo "")
          if [ -z "$PREV_TAG" ]; then
            echo "CHANGELOG=$(git log --pretty=format:"- %s" ${{ github.ref_name }})" >> $GITHUB_OUTPUT
          else
            echo "CHANGELOG=$(git log --pretty=format:"- %s" $PREV_TAG..${{ github.ref_name }})" >> $GITHUB_OUTPUT
          fi

      - name: Rename artifact
        run: |
          mv dist/pyplayer-windows.zip dist/pyplayer-windows-${{ github.ref_name }}.zip
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          draft: true
          prerelease: ${{ contains(github.ref_name, '-beta') }}
          body: |
            # pyPlayer ${{ steps.get_version.outputs.VERSION }}

            ## Changes in this release:
            ${{ steps.changelog.outputs.CHANGELOG }}

            ## Installation

            **For Windows users:**
            Download the zip file called "**pyplayer-windows-${{ github.ref_name }}.zip**". Extract it and use the executable in your terminal, or add it to your PATH to use it from anywhere.

          artifacts: dist/pyplayer-windows-${{ github.ref_name }}.zip
          token: ${{ secrets.GITHUB_TOKEN }}
